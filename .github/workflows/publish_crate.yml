name: Build and upload Rust crate

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  check_fmt:
    name: Check format
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Check format
      run: cargo fmt --check

  check_clippy:
    name: Check clippy: no features
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Setup clippy
      run: rustup component add clippy

    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings

  check_clippy_serde:
    name: Check clippy: features: serde
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Setup clippy
      run: rustup component add clippy

    - name: Run clippy
      run: cargo clippy --all-targets --features serde -- -D warnings

  check_clippy_all_features:
    name: Check clippy: features: all
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Setup clippy
      run: rustup component add clippy

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  run_tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Run tests
      run: cargo test --workspace

  msrv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout reposistory
        uses: actions/checkout@v4

      - name: Setup MSRV checker
        uses: taiki-e/install-action@cargo-hack

      - name: Run MSRV checker
        run: cargo hack check --rust-version --workspace --all-targets --ignore-private


  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build Rust package
      run: cargo build --release --workspace

    - name: Publish dry run
      if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
      run: cargo publish --dry-run

    - name: Upload crate
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
